# Generated by Django 2.2.1 on 2019-06-26 08:59

import absolutum.mixins.mixins
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        ('company', '0002_auto_20190616_1417'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('deal', '0002_auto_20190616_1417'),
    ]

    operations = [
        migrations.CreateModel(
            name='ServiceTimetable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Начало периода')),
                ('finish_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Конец периода')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Начало рабочего дня')),
                ('finish_time', models.TimeField(blank=True, null=True, verbose_name='Конец рабочего дня')),
                ('interval_time', models.TimeField(blank=True, null=True, verbose_name='Интервал')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('managers', models.ManyToManyField(blank=True, related_name='manager_service_timetables', to='company.User', verbose_name='Администраторы')),
                ('masters', models.ManyToManyField(blank=True, related_name='master_service_timetables', to='company.User', verbose_name='Правщики')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='timetables', to='deal.Service', verbose_name='Услуга')),
            ],
            options={
                'verbose_name_plural': 'Услуги: расписание',
                'ordering': ['service__name', 'start_datetime'],
                'permissions': [('add_servicetimetable', 'Добавлять расписание для услуг'), ('change_servicetimetable', 'Редактировать расписание для услуг'), ('delete_servicetimetable', 'Удалять расписание для услуг'), ('view_servicetimetable', 'Просматривать расписание для услуг')],
                'default_permissions': (),
                'verbose_name': 'Услуга: расписание',
            },
            bases=(models.Model, absolutum.mixins.mixins.CoreMixin, absolutum.mixins.mixins.DisplayMixin),
        ),
        migrations.AlterField(
            model_name='deal',
            name='master',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='master_deals', to='company.User', verbose_name='Правщик'),
        ),
        migrations.CreateModel(
            name='ServiceTimetableGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=124, verbose_name='Наименование')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Начало рабочего дня')),
                ('finish_time', models.TimeField(blank=True, null=True, verbose_name='Конец рабочего дня')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('masters', models.ManyToManyField(blank=True, related_name='timetable_groups', to='company.User', verbose_name='Правщики')),
                ('timetable', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='deal.ServiceTimetable', verbose_name='Расписание')),
            ],
            options={
                'verbose_name_plural': 'Услуги: группы для расписания',
                'ordering': ['timetable', 'start_time'],
                'permissions': [('add_servicetimetablegroup', 'Добавлять группы для расписания'), ('change_servicetimetablegroup', 'Редактировать группы для расписания'), ('delete_servicetimetablegroup', 'Удалять группы для расписания'), ('view_servicetimetablegroup', 'Просматривать группы для расписания')],
                'default_permissions': (),
                'verbose_name': 'Услуга: группа для расписания',
            },
            bases=(models.Model, absolutum.mixins.mixins.CoreMixin, absolutum.mixins.mixins.DisplayMixin),
        ),
        migrations.CreateModel(
            name='HistoricalServiceTimetableGroup',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=124, verbose_name='Наименование')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Начало рабочего дня')),
                ('finish_time', models.TimeField(blank=True, null=True, verbose_name='Конец рабочего дня')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('timetable', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='deal.ServiceTimetable', verbose_name='Расписание')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical Услуга: группа для расписания',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='HistoricalServiceTimetable',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('start_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Начало периода')),
                ('finish_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Конец периода')),
                ('start_time', models.TimeField(blank=True, null=True, verbose_name='Начало рабочего дня')),
                ('finish_time', models.TimeField(blank=True, null=True, verbose_name='Конец рабочего дня')),
                ('interval_time', models.TimeField(blank=True, null=True, verbose_name='Интервал')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Комментарий')),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('service', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='deal.Service', verbose_name='Услуга')),
            ],
            options={
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
                'verbose_name': 'historical Услуга: расписание',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
