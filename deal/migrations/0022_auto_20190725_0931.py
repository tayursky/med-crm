# Generated by Django 2.2.1 on 2019-07-25 09:31

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_currentuser.db.models.fields
import django_currentuser.middleware
import django_extensions.db.fields


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('deal', '0021_report'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='report',
            options={'default_permissions': (), 'ordering': ['service__branch', 'start_datetime'], 'permissions': [], 'verbose_name': 'Отчет', 'verbose_name_plural': 'Отчеты'},
        ),
        migrations.AddField(
            model_name='deal',
            name='created_at',
            field=django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, null=True, verbose_name='Время создания'),
        ),
        migrations.AddField(
            model_name='deal',
            name='created_by',
            field=django_currentuser.db.models.fields.CurrentUserField(default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='deals', to=settings.AUTH_USER_MODEL, verbose_name='Организатор'),
        ),
        migrations.AddField(
            model_name='historicaldeal',
            name='created_at',
            field=django_extensions.db.fields.CreationDateTimeField(auto_now_add=True, null=True, verbose_name='Время создания'),
        ),
        migrations.AddField(
            model_name='historicaldeal',
            name='created_by',
            field=django_currentuser.db.models.fields.CurrentUserField(blank=True, db_constraint=False, default=django_currentuser.middleware.get_current_authenticated_user, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to=settings.AUTH_USER_MODEL, verbose_name='Организатор'),
        ),
        migrations.AlterField(
            model_name='service',
            name='managers',
            field=models.ManyToManyField(blank=True, related_name='service_managers', to='company.User', verbose_name='Организаторы'),
        ),
    ]
