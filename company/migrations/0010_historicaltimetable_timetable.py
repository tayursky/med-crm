# Generated by Django 2.2.1 on 2019-10-25 09:53

import absolutum.mixins.mixins
from django.conf import settings
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion
import simple_history.models


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('identity', '0016_auto_20191011_1527'),
        ('company', '0009_branch_workers'),
    ]

    operations = [
        migrations.CreateModel(
            name='TimeTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_start_datetime', models.DateTimeField(verbose_name='Плановое начало рабочего дня')),
                ('plan_end_datetime', models.DateTimeField(verbose_name='Плановое окончание рабочего дня')),
                ('fact_start_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Фактическое начало рабочего дня')),
                ('fact_end_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Фактическое окончание рабочего дня')),
                ('comment', models.CharField(default='', max_length=512, verbose_name='Комментарий')),
                ('cache', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='company.Branch', verbose_name='Филиал')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='identity.Person', verbose_name='Работник')),
            ],
            options={
                'verbose_name_plural': 'Табель',
                'verbose_name': 'Табель',
                'default_permissions': (),
                'permissions': [('add_timetable', 'Добавлять табель'), ('change_timetable', 'Редактировать табель'), ('delete_timetable', 'Удалять табель'), ('view_timetable', 'Просматривать табель')],
                'ordering': [],
            },
            bases=(models.Model, absolutum.mixins.mixins.CoreMixin, absolutum.mixins.mixins.DisplayMixin),
        ),
        migrations.CreateModel(
            name='HistoricalTimeTable',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('plan_start_datetime', models.DateTimeField(verbose_name='Плановое начало рабочего дня')),
                ('plan_end_datetime', models.DateTimeField(verbose_name='Плановое окончание рабочего дня')),
                ('fact_start_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Фактическое начало рабочего дня')),
                ('fact_end_datetime', models.DateTimeField(blank=True, null=True, verbose_name='Фактическое окончание рабочего дня')),
                ('comment', models.CharField(default='', max_length=512, verbose_name='Комментарий')),
                ('cache', django.contrib.postgres.fields.jsonb.JSONField(default=dict)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('branch', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='company.Branch', verbose_name='Филиал')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('person', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='identity.Person', verbose_name='Работник')),
            ],
            options={
                'verbose_name': 'historical Табель',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
